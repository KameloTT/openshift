apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: cluster-admin-app-1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: mesh-external
---
apiVersion: v1
data:
  nginx.conf: |
    events {
        worker_connections  1024;
    }
    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        sendfile        on;
        tcp_nopush      on;
        tcp_nodelay     on;
        keepalive_timeout  65;
        types_hash_max_size 4096;
        default_type  application/octet-stream;
        server {
            listen       8080 default_server;
            listen       [::]:8080 default_server;
            server_name  _;
            root /usr/share/nginx/html;
            index index.html;
        }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: nginx-webserver-cm
  namespace: app-1
---
apiVersion: v1
kind: Service
metadata:
  name: web-server
  namespace: app-1
  labels:
    app: rh-web-server
spec:
  ports:
  - port: 8080
    protocol: TCP
    name: http-web
  selector:
    app: rh-web-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rh-web-server
  name: web-server
  namespace: app-1
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: rh-web-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: 'true'
      labels:
        app: rh-web-server
      name: web-server
    spec:
      containers:
      - name: nginx-webserver
        image: nginx
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-webserver-cm
